<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="IIS Express">Plinia-AuthService/Plinia-AuthService.csproj</projectFile>
    <projectFile profileName="Plinia_AuthService">Plinia-AuthService/Plinia-AuthService.csproj</projectFile>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="41c332ac-8779-4833-8624-fd36ca476d82" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/.idea.Plinia-AuthService/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.Plinia-AuthService/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.Plinia-AuthService/.idea/dataSources.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.Plinia-AuthService/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.Plinia-AuthService/.idea/indexLayout.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Plinia-AuthService.sln" beforeDir="false" afterPath="$PROJECT_DIR$/OPD-Plinia.sln" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Plinia-AuthService/Controllers/AccountController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Plinia-AuthService/Controllers/AccountController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Plinia-AuthService/Models/JwtSettings.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Plinia-AuthService/Models/JwtSettings.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/ILViewer/0b2b71b9a548475f9db13de2a63308dea234a8/e4/131c90a9/020008C3pdb1154.il" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/8984ee8b82ae42dc9b754a80440ffeef12688/d6/537e573c/IdentityUser.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/c6ad457575d35dcbff26c9a5e3fb1d92f1d3c55f25ef6ebf475367b5d8/List.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Hg3TN2UyVV1sTMfWu3IRN12jnp" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected=".NET Launch Settings Profile.Plinia-AuthService: Plinia_AuthService">
    <configuration name="Plinia-AuthService: Plinia_AuthService" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Plinia-AuthService/Plinia-AuthService.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="Plinia_AuthService" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="MySQL Container" type="docker-deploy" factoryName="docker-image" temporary="true" server-name="Docker">
      <deployment type="docker-image">
        <settings>
          <option name="imageTag" value="mysql:latest" />
          <option name="containerName" value="mysql" />
          <option name="envVars">
            <list>
              <DockerEnvVarImpl>
                <option name="name" value="MYSQL_ROOT_PASSWORD" />
                <option name="value" value="plinia" />
              </DockerEnvVarImpl>
            </list>
          </option>
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="3306" />
                <option name="hostPort" value="3306" />
              </DockerPortBindingImpl>
            </list>
          </option>
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Plinia-AuthService: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="Plinia-AuthService/docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isPublishEnabled="true" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isPublishEnabled="true" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.plinia-authservice: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="plinia-authservice" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isPublishEnabled="true" />
      <method v="2" />
    </configuration>
    <configuration name="docker: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker/docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isPublishEnabled="true" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue=".NET Launch Settings Profile.Plinia-AuthService: Plinia_AuthService" />
      <item itemvalue="Docker.docker-compose.yml.plinia-authservice: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Docker.Plinia-AuthService: Compose Deployment" />
      <item itemvalue="Docker.docker: Compose Deployment" />
      <item itemvalue="Docker.MySQL Container" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.plinia-authservice: Compose Deployment" />
        <item itemvalue="Docker.Plinia-AuthService: Compose Deployment" />
        <item itemvalue="Docker.docker: Compose Deployment" />
        <item itemvalue="Docker.MySQL Container" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="41c332ac-8779-4833-8624-fd36ca476d82" name="Changes" comment="" />
      <created>1668692905613</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1668692905613</updated>
      <workItem from="1668692908660" duration="1118000" />
      <workItem from="1668694056702" duration="1327000" />
      <workItem from="1669296114792" duration="3638000" />
      <workItem from="1669447132657" duration="773000" />
      <workItem from="1669447917925" duration="10007000" />
      <workItem from="1669897427120" duration="3981000" />
    </task>
    <task id="LOCAL-00001" summary="Настроил docker-compose.">
      <created>1669465917605</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1669465917605</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="UnityUnitTestConfiguration" currentTestLauncher="NUnit" />
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Настроил docker-compose." />
    <option name="LAST_COMMIT_MESSAGE" value="Настроил docker-compose." />
  </component>
</project>